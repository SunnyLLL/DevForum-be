pipeline {
    agent any
    environment {
        AWS_ACCOUNT_ID="713495193197"
        AWS_DEFAULT_REGION="us-west-2" 
        IMAGE_REPO_NAME="creativegangbackend"
        IMAGE_TAG="latest"
        REPOSITORY_URI = "${AWS_ACCOUNT_ID}.dkr.ecr.${AWS_DEFAULT_REGION}.amazonaws.com/${IMAGE_REPO_NAME}:${IMAGE_TAG}"
    }
         //install docker,cli ,git in jenkins service
    stages {
        stage('Git checkout') {
            steps{
                // Get source code from a GitHub repository
               checkout([$class: 'GitSCM', branches: [[name: '*/dev']], extensions: [], userRemoteConfigs: [[url: 'https://github.com/SunnyLLL/DevForum-be.git']]])
            }
        }
        
        stage('Build docker image') {
            steps{
                    sh 'docker build -t ${IMAGE_REPO_NAME}:${IMAGE_TAG} .'
                }
            }
        
        stage('ECR login') {
            steps{
                    sh 'aws ecr get-login-password --region ${AWS_DEFAULT_REGION} | docker login --username AWS --password-stdin ${AWS_ACCOUNT_ID}.dkr.ecr.${AWS_DEFAULT_REGION}.amazonaws.com'
                    
            }
            }
        
        
        stage('Push image to ECR') {
            steps{
                    sh 'docker tag ${IMAGE_REPO_NAME}:${IMAGE_TAG} ${AWS_ACCOUNT_ID}.dkr.ecr.${AWS_DEFAULT_REGION}.amazonaws.com/${IMAGE_REPO_NAME}:${IMAGE_TAG}'

                    sh 'docker push ${AWS_ACCOUNT_ID}.dkr.ecr.${AWS_DEFAULT_REGION}.amazonaws.com/${IMAGE_REPO_NAME}:${IMAGE_TAG}'
                
            }
        }
        
       stage('Deploy in EKS') {
            steps {
                    script {
                        // AWS CLI must be installed in the Jenkins server first. 
                        
                        echo "=========== Deploy In EKS ================="
                       sh ' kubectl apply -f eks-deployment.yaml '
                    
                }
            }
        }

        post {
                success {
                    echo "The deploy stage successfully."
                }
                failure {
                    echo "The deploy stage failed."
                }
            }
    }        
}
